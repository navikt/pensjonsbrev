name: "Build and deploy brevbaker and pdf-bygger"
on:
  workflow_dispatch:
  pull_request:
    paths:
      - "build.gradle.kts"
      - "gradle.properties"
      - "gradle/libs.versions.toml"
      - "template-model-generator/**"
      - "brevbaker/**"
      - "brevbaker-dsl/**"
      - "etterlattemaler/**"
      - "pensjonsmaler/**"
      - "aldersmaler/**"
      - "ufoeremaler/**"
      - "pensjon-brevbaker/**"
      - "pdf-bygger/**"
      - ".github/workflows/pdfbygger-brevbaker.yml"
      - "!**/**.md"
  push:
    branches:
      - "main"
    paths:
      - "build.gradle.kts"
      - "gradle.properties"
      - "gradle/libs.versions.toml"
      - "template-model-generator/**"
      - "brevbaker/**"
      - "brevbaker-dsl/**"
      - "etterlattemaler/**"
      - "pensjonsmaler/**"
      - "aldersmaler/**"
      - "ufoeremaler/**"
      - "pensjon-brevbaker/**"
      - "pdf-bygger/**"
      - ".github/workflows/pdfbygger-brevbaker.yml"
      - "!**/**.md"
  # Vi må kjøre Percy minst hver 30. dag for å ha en baseline for visuelle tester. Disse planlagte kjøringene er for det formålet.
  schedule:
    - cron: "0 5 1,15 * *"
env:
  "IMAGE_PDF_BYGGER": "ghcr.io/${{ github.repository }}/pdf-bygger:${{ github.sha }}"
  JavaDistribution: "temurin"
  JavaVersion: 21

permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  buildBrevbaker:
    uses: ./.github/workflows/.build-backend.yaml
    secrets: inherit
    with:
      image_suffix: brevbaker
      path: pensjon-brevbaker
      publishToMavenLocal: true
      buildImage: true

  salsa-brevbaker:
    uses: ./.github/workflows/.salsa.yaml
    needs: buildBrevbaker
    secrets: inherit
    with:
      digest: ${{ needs.buildBrevbaker.outputs.digest }}
      image: ${{ needs.buildBrevbaker.outputs.image }}

  buildPdfbygger:
    uses: ./.github/workflows/.build-backend.yaml
    secrets: inherit
    with:
      image_suffix: pdf-bygger
      path: pdf-bygger
      publishToMavenLocal: false
      buildImage: true
      uploadJar: true

  pushPdfByggerToGithubRegistry:
    name: "Push pdf-bygger to github registry"
    needs: buildPdfbygger
    runs-on: ubuntu-latest
    permissions:
      packages: "write"
      id-token: "write"
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Download jar
        uses: actions/download-artifact@v5
        with:
          name: pdf-bygger-jar
          path: pdf-bygger/build/libs/
      - name: "Publish container image to ghcr.io"
        run: |
          echo $GITHUB_TOKEN | docker login --username $GITHUB_REPOSITORY --password-stdin https://ghcr.io
          [ -n "${OUTPUT_IMAGE}" ] && docker pull ${OUTPUT_IMAGE} && docker tag ${OUTPUT_IMAGE} ${IMAGE_PDF_BYGGER}  || docker build --pull --tag ${IMAGE_PDF_BYGGER} pdf-bygger
          docker push ${IMAGE_PDF_BYGGER}
        env:
          "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
          OUTPUT_IMAGE: ${{ needs.buildPdfbygger.outputs.image }}

  salsa-pdfbygger:
    uses: ./.github/workflows/.salsa.yaml
    needs: buildPdfbygger
    secrets: inherit
    with:
      digest: ${{ needs.buildPdfbygger.outputs.digest }}
      image: ${{ needs.buildPdfbygger.outputs.image }}

  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      latex: ${{ steps.changes.outputs.latex }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changes
        with:
          filters: |
            latex:
              - 'pdf-bygger/containerFiles/latex/**'
              - 'pdf-bygger/Dockerfile'

  runIntegrationTests:
    name: "Integration tests"
    needs: [ pushPdfByggerToGithubRegistry, changes ]
    services:
      pdf-bygger:
        env:
          PDF_BYGGER_COMPILE_TMP_DIR: "/tmp"
        ports:
          - 8081:8080
        image: "ghcr.io/${{ github.repository }}/pdf-bygger:${{ github.sha }}"
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest-16-cores
    permissions:
      statuses: write
      checks: write
      pull-requests: write
      packages: write
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: gradle/actions/setup-gradle@v4
      - uses: actions/setup-java@v5
        with:
          "distribution": ${{ env.JavaDistribution }}
          "java-version": ${{ env.JavaVersion }}
      - name: "run integration tests"
        run: |
          ./gradlew :brevbaker-api-model-common:publishToMavenLocal 
          ./gradlew :pensjon-brevbaker-api-model:publishToMavenLocal
          ./gradlew :alder-brevbaker-api-model:publishToMavenLocal
          ./gradlew :ufoere-brevbaker-api-model:publishToMavenLocal
          ./gradlew :pensjon-brevbaker:integrationTest
        env:
          "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@5609ce4db72c09db044803b344a8968fd1f315da
        with:
          fail_if_no_tests: true
          fail_on_test_failures: true
          report_paths: '**/build/test-results/integrationTest/TEST-*.xml'
      - name: Upload images
        if: ${{ (needs.changes.outputs.latex == 'true' || (github.ref == 'refs/heads/main' && github.event_name == 'schedule')) }}
        uses: actions/upload-artifact@v4
        with:
          name: visuals
          path: pensjon-brevbaker/build/test_visual/

  analyzeImages:
    name: "Analyze images"
    needs: [ runIntegrationTests, changes ]
    runs-on: ubuntu-latest-16-cores
    if: ${{ (needs.changes.outputs.latex == 'true' || (github.ref == 'refs/heads/main' && github.event_name == 'schedule')) }}
    permissions:
      statuses: write
      checks: write
      pull-requests: write
    steps:
      - name: Download visuals
        uses: actions/download-artifact@v5
        with:
          name: visuals
          path: pensjon-brevbaker/build/test_visual/
      - name: Convert visual-test pdfs
        uses: routsi/ImageMagick-action@v1.1.1
        with:
          command: mogrify -path pensjon-brevbaker/build/test_visual -format png -background white -alpha remove -alpha off -density 230 -quality 85 pensjon-brevbaker/build/test_visual/pdf/*.pdf
      - uses: actions/setup-node@v5
        with:
          node-version: '22'
      - run: npm install --save-dev @percy/cli
      - name: Publish visual-tests to percy
        run: |
          npx percy upload pensjon-brevbaker/build/test_visual/ > percy.log
          cat percy.log
          URL=$(cat percy.log | grep -e "build #[0-9]\+:" | sed 's/^.*build #[0-9]\+: //g')
          if [[ $URL ]]; then echo $URL > percy-build-url;else echo "Percy upload feilet" > percy-build-url;fi
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      - name: Comment percy review link
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043
        if: ${{ needs.changes.outputs.latex == 'true' && github.event_name == 'pull_request' }}
        with:
          issue-number: ${{ github.event.number }}
          body-path: percy-build-url

  deployBrevbakerToDev:
    name: "Deploy brevbaker to dev"
    uses: ./.github/workflows/.deploy.yaml
    secrets: inherit
    needs: [runIntegrationTests, buildBrevbaker]
    with:
      cluster: "dev-gcp"
      resource: "pensjon-brevbaker/.nais/unleash-api-token-dev-q2.yaml,pensjon-brevbaker/.nais/nais.yaml"
      image: ${{needs.buildBrevbaker.outputs.image}}
      vars: "pensjon-brevbaker/.nais/dev.yaml"

  deployPdfByggerToDev:
    name: "Deploy pdf-bygger to dev"
    uses: ./.github/workflows/.deploy.yaml
    secrets: inherit
    needs: [runIntegrationTests, buildPdfbygger]
    with:
      cluster: "dev-gcp"
      resource: "pdf-bygger/.nais/nais.yaml,pdf-bygger/.nais/hpa.yaml"
      image: ${{needs.buildPdfbygger.outputs.image}}
      vars: "pdf-bygger/.nais/dev.yaml"

  deployBrevbakerToProduction:
    name: "Deploy brevbaker to production"
    uses: ./.github/workflows/.deploy.yaml
    secrets: inherit
    needs: [runIntegrationTests, buildBrevbaker]
    with:
      cluster: "prod-gcp"
      resource: "pensjon-brevbaker/.nais/unleash-api-token-prod.yaml,pensjon-brevbaker/.nais/nais.yaml"
      image: ${{needs.buildBrevbaker.outputs.image}}
      vars: "pensjon-brevbaker/.nais/prod.yaml"

  deployPdfByggerToProd:
    name: "Deploy pdf-bygger to dev"
    uses: ./.github/workflows/.deploy.yaml
    secrets: inherit
    needs: [runIntegrationTests, buildPdfbygger]
    with:
      cluster: "prod-gcp"
      resource: "pdf-bygger/.nais/nais.yaml,pdf-bygger/.nais/hpa.yaml"
      image: ${{needs.buildPdfbygger.outputs.image}}
      vars: "pdf-bygger/.nais/prod.yaml"

  "klarTilMerge":
    name: "Klar til merge"
    needs: [buildBrevbaker, buildPdfbygger, runIntegrationTests]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: ./.github/pr