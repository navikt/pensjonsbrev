name: "Build and deploy pensjon-brevbaker"
on:
  push:
    branches:
      - "main"
    paths:
      - "pensjon-brevbaker/**"
      - ".github/workflows/brevbaker.yaml"
env:
  "IMAGE": "docker.pkg.github.com/${{ github.repository }}/pensjon-brevbaker:${{\
    \ github.sha }}"
jobs:
  "build":
    defaults:
      run:
        working-directory: pensjon-brevbaker
    name: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "gradle/wrapper-validation-action@v1"
      - uses: "actions/cache@v2"
        with:
          "path": "~/.gradle/caches"
          "key": "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}"
          "restore-keys": "${{ runner.os }}-gradle-"
      - uses: "actions/setup-java@v1"
        with:
          "java-version": "15"
      - name: "compile and run tests"
        run: "./gradlew build"
        env:
          "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
      - name: "Build and publish Docker image"
        run: "docker build --pull --tag ${IMAGE} . && echo $GITHUB_TOKEN | docker login\
        \ --username $GITHUB_REPOSITORY --password-stdin https://docker.pkg.github.com\
        \ && docker push ${IMAGE}"
        env:
          "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
  runIntegrationTests:
    name: "Integration tests"
    needs: "build"
    services:
      pdf-bygger:
        image: ghcr.io/navikt/pensjonsbrev/pensjon-pdf-bygger:latest
        credentials:
          username: ${{ env.GITHUB_REPOSITORY }}
          password: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/cache@v2"
        with:
          "path": "~/.gradle/caches"
          "key": "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}"
          "restore-keys": "${{ runner.os }}-gradle-"
      - uses: "actions/setup-java@v1"
        with:
          "java-version": "15"
      - name: "run integration tests"
        run: "./gradlew integrationTest"

  "deployAppToDev":
    name: "Deploy to dev"
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy to DEV"
        uses: "nais/deploy/actions/deploy@v1"

        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": "pensjon-brevbaker/.nais/nais.yaml"
          "VAR": image=${{ env.IMAGE }}
          "VARS": "pensjon-brevbaker/.nais/dev.yaml"
#  "deployAppToProd":
#    name: "Deploy to prod"
#    needs: "deployAppToDev"
#    runs-on: "ubuntu-18.04"
#    steps:
#      - uses: "actions/checkout@v2"
#      - name: "Deploy to PROD"
#        uses: "nais/deploy/actions/deploy@v1"
#        env:
#          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
#          "CLUSTER": "prod-gcp"
#          "RESOURCE": ".nais/nais.yaml"
#          "VARS": ".nais/prod.yaml"