/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SaksnummerIndexImport } from './routes/saksnummer.index'
import { Route as SaksnummerSaksIdRouteImport } from './routes/saksnummer_/$saksId/route'
import { Route as SaksnummerSaksIdKvitteringRouteImport } from './routes/saksnummer_/$saksId/kvittering/route'
import { Route as SaksnummerSaksIdBrevvelgerRouteImport } from './routes/saksnummer_/$saksId/brevvelger/route'
import { Route as SaksnummerSaksIdBrevbehandlerRouteImport } from './routes/saksnummer_/$saksId/brevbehandler/route'
import { Route as SaksnummerSaksIdBrevBrevIdImport } from './routes/saksnummer_/$saksId/brev.$brevId'
import { Route as SaksnummerSaksIdVedtakVedtakIdRouteImport } from './routes/saksnummer_/$saksId/vedtak.$vedtakId/route'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SaksnummerIndexRoute = SaksnummerIndexImport.update({
  path: '/saksnummer/',
  getParentRoute: () => rootRoute,
} as any)

const SaksnummerSaksIdRouteRoute = SaksnummerSaksIdRouteImport.update({
  path: '/saksnummer/$saksId',
  getParentRoute: () => rootRoute,
} as any)

const SaksnummerSaksIdKvitteringRouteRoute =
  SaksnummerSaksIdKvitteringRouteImport.update({
    path: '/kvittering',
    getParentRoute: () => SaksnummerSaksIdRouteRoute,
  } as any)

const SaksnummerSaksIdBrevvelgerRouteRoute =
  SaksnummerSaksIdBrevvelgerRouteImport.update({
    path: '/brevvelger',
    getParentRoute: () => SaksnummerSaksIdRouteRoute,
  } as any)

const SaksnummerSaksIdBrevbehandlerRouteRoute =
  SaksnummerSaksIdBrevbehandlerRouteImport.update({
    path: '/brevbehandler',
    getParentRoute: () => SaksnummerSaksIdRouteRoute,
  } as any)

const SaksnummerSaksIdBrevBrevIdRoute = SaksnummerSaksIdBrevBrevIdImport.update(
  {
    path: '/brev/$brevId',
    getParentRoute: () => SaksnummerSaksIdRouteRoute,
  } as any,
)

const SaksnummerSaksIdVedtakVedtakIdRouteRoute =
  SaksnummerSaksIdVedtakVedtakIdRouteImport.update({
    path: '/vedtak/$vedtakId',
    getParentRoute: () => SaksnummerSaksIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/saksnummer/$saksId': {
      preLoaderRoute: typeof SaksnummerSaksIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/saksnummer/': {
      preLoaderRoute: typeof SaksnummerIndexImport
      parentRoute: typeof rootRoute
    }
    '/saksnummer/$saksId/brevbehandler': {
      preLoaderRoute: typeof SaksnummerSaksIdBrevbehandlerRouteImport
      parentRoute: typeof SaksnummerSaksIdRouteImport
    }
    '/saksnummer/$saksId/brevvelger': {
      preLoaderRoute: typeof SaksnummerSaksIdBrevvelgerRouteImport
      parentRoute: typeof SaksnummerSaksIdRouteImport
    }
    '/saksnummer/$saksId/kvittering': {
      preLoaderRoute: typeof SaksnummerSaksIdKvitteringRouteImport
      parentRoute: typeof SaksnummerSaksIdRouteImport
    }
    '/saksnummer/$saksId/vedtak/$vedtakId': {
      preLoaderRoute: typeof SaksnummerSaksIdVedtakVedtakIdRouteImport
      parentRoute: typeof SaksnummerSaksIdRouteImport
    }
    '/saksnummer/$saksId/brev/$brevId': {
      preLoaderRoute: typeof SaksnummerSaksIdBrevBrevIdImport
      parentRoute: typeof SaksnummerSaksIdRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  SaksnummerSaksIdRouteRoute.addChildren([
    SaksnummerSaksIdBrevbehandlerRouteRoute,
    SaksnummerSaksIdBrevvelgerRouteRoute,
    SaksnummerSaksIdKvitteringRouteRoute,
    SaksnummerSaksIdVedtakVedtakIdRouteRoute,
    SaksnummerSaksIdBrevBrevIdRoute,
  ]),
  SaksnummerIndexRoute,
])

/* prettier-ignore-end */
